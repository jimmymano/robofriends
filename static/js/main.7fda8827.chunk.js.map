{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","ErrorBoundary.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","className","alt","src","CardList","robots","cardComponent","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","console","log","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAeeA,EAbF,SAACC,GACV,IAAMC,EAAeD,EAAfC,KAAKC,EAAUF,EAAVE,MAAUF,EAAJG,GACrB,OACI,sBAAKC,UAAW,sDAAhB,UACI,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BN,EAAMG,GAAhC,kBACpB,gCACI,6BAAKF,IACL,4BAAIC,WCWDK,EAjBC,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACXC,EAAgBD,EAAOE,KAAI,SAACC,EAAKC,GACnC,OAAQ,cAAC,EAAD,CAETT,GAAIK,EAAOI,GAAGT,GACdF,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,OAHZU,MAOL,OACI,8BACPH,KCDcI,EAZC,SAAC,GAA6B,EAA5BC,YAA6B,IAAjBC,EAAgB,EAAhBA,aAC1B,OACI,qBAAKX,UAAU,OAAf,SACA,uBACAA,UAAU,mCACVY,KAAK,SACJC,YAAY,gBACZC,SAAUH,OCKJI,G,MAXA,SAACnB,GACZ,OACI,qBAAKoB,MAAO,CACZC,UAAU,SACVC,OAAO,kBACPC,OAAO,SAHP,SAIKvB,EAAMwB,aCYJC,E,kDAlBX,WAAYzB,GAAO,IAAD,8BACd,cAAMA,IACD0B,MAAM,CACPC,UAAS,GAHC,E,qDAOlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAG5B,WACI,OAAGG,KAAKJ,MAAMC,SACJ,wDAEHG,KAAK9B,MAAMwB,a,GAhBEQ,aC8CbC,E,kDAtCd,aAAc,IAAD,8BACT,gBAcLC,eAAe,SAACC,GACZ,EAAKJ,SAAS,CAACjB,YAAYqB,EAAMC,OAAOC,QACxCC,QAAQC,IAAIJ,EAAMC,OAAOC,QAfxB,EAAKX,MAAM,CACRlB,OAAO,GACPM,YAAY,IAJN,E,qDAQb,WAAoB,IAAD,OACf0B,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAE,EAAKb,SAAS,CAACvB,OAAOoC,OACnCN,QAAQC,IAAI,W,oBAQb,WAAS,IAAD,OACEM,EAAef,KAAKJ,MAAMlB,OAAOsC,QAAO,SAAAtC,GAC1C,OAAOA,EAAOP,KAAK8C,cAAcC,SAAS,EAAKtB,MAAMZ,YAAYiC,kBAEzE,OACI,sBAAK3C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWW,aAAce,KAAKI,iBAClC,cAAC,EAAD,UACI,cAAC,EAAD,UACJ,cAAC,EAAD,CAAU1B,OAAQqC,e,GA/BRI,IAAMjB,WCGTkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,EAAD,MAEAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7fda8827.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = (props) => {\r\n    const{name,email,id}=props;\r\nreturn(\r\n    <div className ='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 tc'>\r\n        <img alt='robot' src={`https://robohash.org/${props.id}test?200x200`}/>\r\n        <div>\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n        </div>\r\n    </div>\r\n);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList =({robots})=>{\r\n const cardComponent = robots.map((user,i) => {\r\n     return (<Card \r\n    key={i}\r\n    id={robots[i].id} \r\n    name={robots[i].name}\r\n    email={robots[i].email} />\r\n     );\r\n })\r\n \r\n    return(\r\n        <div>\r\n{cardComponent}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox=({searchfield,searchChange})=>{\r\n    return(\r\n        <div className='pad2'>\r\n        <input \r\n        className='pa3 ba b--dreen bg-lightest-blue'\r\n        type='search'\r\n         placeholder='Search Robots'\r\n         onChange={searchChange}\r\n         />\r\n         </div>\r\n    );\r\n}\r\nexport default SearchBox; ","\r\nimport React from 'react';\r\n\r\nconst Scroll = (props) =>{\r\n    return (\r\n        <div style={{\r\n        overflowY:'scroll', \r\n        border:'5px solid black',\r\n        height:'465px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll","import React,{Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            hasError:false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError:true})\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return<h1>Ooops.That is not good</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\nexport default ErrorBoundary ;","// import { render } from '@testing-library/react';\r\nimport React,{Component} from 'react';\r\nimport CardList from '../Components/CardList.js'\r\n// import {robots} from'./robots';\r\nimport SearchBox from '../Components/SearchBox.js';\r\nimport '../Containers/App.css';\r\nimport Scroll from '../Components/Scroll.js';\r\nimport ErrorBoundary from '../ErrorBoundary.js';\r\n\r\nclass App extends React.Component {\r\n constructor(){\r\n     super()\r\n     this.state={\r\n        robots:[],\r\n        searchfield:''\r\n     }\r\n }  \r\n\r\n componentDidMount(){\r\n     fetch('https://jsonplaceholder.typicode.com/users')\r\n     .then(response=> response.json())\r\n     .then(users=>this.setState({robots:users}));\r\n     console.log('check')\r\n }\r\n\r\nonSearchChange=(event)=>{\r\n    this.setState({searchfield:event.target.value})\r\n    console.log(event.target.value);\r\n}\r\n \r\n    render(){\r\n        const filteredRobots=this.state.robots.filter(robots=>{\r\n            return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n        })\r\n    return(\r\n        <div className='tc'>\r\n            <h1 className='f1'>ROBOFRIENDS</h1>\r\n            <SearchBox searchChange={this.onSearchChange}/>\r\n        <Scroll>\r\n            <ErrorBoundary>\r\n        <CardList robots={filteredRobots}/>\r\n        </ErrorBoundary>\r\n        </Scroll>\r\n        \r\n        </div>\r\n    );   \r\n    } \r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App.js';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n  <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n "],"sourceRoot":""}